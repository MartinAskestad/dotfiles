unlet! skip_defaults_vim
source $VIMRUNTIME/defaults.vim

" ## Keyboard bindings ## {{{
" Switch : and . as well as , and ; for easier use on swedish keyboard
let mapleader = " "
nnoremap . :
nnoremap : .
nnoremap , ;
nnoremap ; ,
vnoremap . :
vnoremap : .

nnoremap <Leader>N :nohlsearch<CR>

nnoremap <Leader>T :term<CR>

tnoremap <ESC> <C-w>N

" TABS
nnoremap <Leader>th :tabprevious<CR>
nnoremap <Leader>tj :tabmove -1<CR>
nnoremap <Leader>tk :tabmove +1<CR>
nnoremap <Leader>tl :tabnext<CR>
nnoremap <Leader>tH :tabfirst<CR>
nnoremap <Leader>tL :tablast<CR>
nnoremap <Leader>tq :bdelete<CR>
nnoremap <Leader>tQ :bdelete!<CR>
nnoremap <Leader>to :tabnew<SPACE>
nnoremap <Leader>tx :tabonly<CR>

" Views/Windows
nnoremap <Leader>vw <C-w>w
nnoremap <Leader>vq <C-w>c
nnoremap <Leader>vs <C-w>s
nnoremap <Leader>vv <C-w>v
nnoremap <Leader>vh <C-w>h
nnoremap <Leader>vj <C-w>j
nnoremap <Leader>vk <C-w>k
nnoremap <Leader>vl <C-w>l
nnoremap <Leader>vH <C-w>5<
nnoremap <Leader>vJ <C-w>:resize +5<CR>
nnoremap <Leader>vK <C-w>:resize -5<CR>
nnoremap <Leader>vL <C-w>5>
nnoremap <Leader>vb <C-w>=
nnoremap <Leader>vV <C-w>\|
nnoremap <Leader>vB <C-w>_
nnoremap <Leader>vm <C-w>\|<C-w>_

" Move lines
vnoremap <Leader>mj :m '>+1<CR>gv=gv
vnoremap <Leader>mk :m '<-2<CR>gv=gv
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv

" Useful insert mode bindings
imap jj <ESC>
inoremap <C-BS> <C-w>
" }}}

" ## Shell ## {{{
set shell=pwsh.exe
set shellcmdflag=-NoProfile\ -NoLogo\ -NonInteractive\ -Command
set shellpipe=|
set shellredir=>
set shellquote=\"
set shellxquote=
" }}}

" ## Behaviour ## {{{
set splitbelow	" New windows appear below
set splitright	" New windows appear to the right
set hidden	" Allow to switch buffers when not saved
set switchbuf=useopen,usetab,newtab
set winminwidth=6	" Set minimum window sizes
set winheight=6
set winminheight=6
set nu rnu
augroup toggle_line_numbers
	au!
	autocmd BufLeave,FocusLost,InsertEnter,WinLeave *.* if &nu | setlocal nornu | endif
	autocmd BufEnter,FocusGained,InsertLeave,WinEnter *.* if &nu | setlocal rnu | endif
augroup END
" }}}

" ## Plugins ##
" ## EMMET ## {{{
augroup emmet_keyboard_bindings
	au!
	" go to the next opening tag below current line
	nnoremap  <leader>hj 0/$/;/<[a-zA-Z][a-zA-Z0-9]*\%(\_[^>]*>\)\@=<CR>:nohlsearch<CR>
	" go  to the next end of closing tag or empty elenent below current line
	nnoremap  <leader>hJ 0/$/;/\%([^>]*$\)\@=<CR>:nohlsearch<CR>
	" go to the previous closing tag above the current line
	nnoremap  <leader>hk $?^?;?>\%([^>]*$\)\@=<CR>:nohlsearch<CR>
	" go to the previous opening tag above the current line
	nnoremap  <leader>hK $?^?;?^[^z]*\zs<\%([a-zA-Z][a-zA-Z0-9]*\_[^>]*>\)\@=<CR>:nohlsearch<CR>
	" go to the next tag element closing
	nnoremap  <leader>hl /><CR>:nohlsearch<CR>
	" go to the previous tag element opening
	nnoremap  <leader>hh ?<<CR>:nohlsearch<CR>
	" Map emmet to leader keys
	nnoremap <leader>he :call emmet#expandAbbr(3, "")<CR>
	nnoremap <leader>hE :call emmet#expandAbbr(1, "")<CR>
	vnoremap <leader>he :call emmet#expandAbbr(2, "")<CR>
	nnoremap <leader>hn :call emmet#nextPrev(0)<CR>
	nnoremap <leader>hN :call emmet#nextPrev(1)<CR>
	nnoremap <leader>hr :call emmet#removeTag()<CR>
	nnoremap <leader>hu :call emmet#updateTag()<CR>
	" Semantics
	setlocal iskeyword=@,48-57,_,-,\"
	" Navigation
	setlocal suffixesadd+=.html,.css,.txt,.js,.ts,.json
augroup END
let g:user_emmet_install_global = 0
autocmd FileType html,css,scss EmmetInstall
packadd emmet-vim
" }}}

augroup config_settings
	au!
	autocmd FileType vim setlocal foldlevel=0 foldmethod=marker
augroup END
